// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { DeleteInvoiceByInvoiceIdData, GetInvoiceByInvoiceIdData, GetInvoiceByInvoiceIdResponse, PutInvoiceByInvoiceIdData, GetInvoiceListData, GetInvoiceListResponse, PostInvoiceData, PostInvoiceResponse, PostInvoiceLineByInvoiceIdData, DeleteInvoiceLineByInvoiceIdByLineNumberData, PutInvoiceLineByInvoiceIdByLineNumberData } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const deleteInvoiceByInvoiceId = <ThrowOnError extends boolean = false>(options: Options<DeleteInvoiceByInvoiceIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
        url: '/Invoice/{invoiceId}',
        ...options
    });
};

export const getInvoiceByInvoiceId = <ThrowOnError extends boolean = false>(options: Options<GetInvoiceByInvoiceIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetInvoiceByInvoiceIdResponse, unknown, ThrowOnError>({
        url: '/Invoice/{invoiceId}',
        ...options
    });
};

export const putInvoiceByInvoiceId = <ThrowOnError extends boolean = false>(options: Options<PutInvoiceByInvoiceIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<unknown, unknown, ThrowOnError>({
        url: '/Invoice/{invoiceId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getInvoiceList = <ThrowOnError extends boolean = false>(options?: Options<GetInvoiceListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetInvoiceListResponse, unknown, ThrowOnError>({
        url: '/Invoice/List',
        ...options
    });
};

export const postInvoice = <ThrowOnError extends boolean = false>(options?: Options<PostInvoiceData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostInvoiceResponse, unknown, ThrowOnError>({
        url: '/Invoice',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postInvoiceLineByInvoiceId = <ThrowOnError extends boolean = false>(options: Options<PostInvoiceLineByInvoiceIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
        url: '/Invoice/Line/{invoiceId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const deleteInvoiceLineByInvoiceIdByLineNumber = <ThrowOnError extends boolean = false>(options: Options<DeleteInvoiceLineByInvoiceIdByLineNumberData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
        url: '/Invoice/Line/{invoiceId}/{lineNumber}',
        ...options
    });
};

export const putInvoiceLineByInvoiceIdByLineNumber = <ThrowOnError extends boolean = false>(options: Options<PutInvoiceLineByInvoiceIdByLineNumberData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<unknown, unknown, ThrowOnError>({
        url: '/Invoice/Line/{invoiceId}/{lineNumber}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};